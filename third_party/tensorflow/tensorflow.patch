diff --git tensorflow/lite/kernels/internal/BUILD tensorflow/lite/kernels/internal/BUILD
index 4be3226..7226f96 100644
--- tensorflow/lite/kernels/internal/BUILD
+++ tensorflow/lite/kernels/internal/BUILD
@@ -22,15 +22,12 @@ HARD_FP_FLAGS_IF_APPLICABLE = select({
 NEON_FLAGS_IF_APPLICABLE = select({
     ":arm": [
         "-O3",
-        "-mfpu=neon",
     ],
     ":armeabi-v7a": [
         "-O3",
-        "-mfpu=neon",
     ],
     ":armv7a": [
         "-O3",
-        "-mfpu=neon",
     ],
     "//conditions:default": [
         "-O3",
diff --git tensorflow/workspace.bzl tensorflow/workspace.bzl
index dff1512..f365f55 100755
--- tensorflow/workspace.bzl
+++ tensorflow/workspace.bzl
@@ -414,11 +414,11 @@ def tf_workspace(path_prefix = "", tf_repo_name = ""):
 
     tf_http_archive(
         name = "com_github_gflags_gflags",
-        sha256 = "ae27cdbcd6a2f935baa78e4f21f675649271634c092b1be01469440495609d0e",
-        strip_prefix = "gflags-2.2.1",
+        sha256 = "6e16c8bc91b1310a44f3965e616383dbda48f83e8c1eaa2370a215057b00cabe",
+        strip_prefix = "gflags-77592648e3f3be87d6c7123eb81cbad75f9aef5a",
         urls = [
-            "https://mirror.bazel.build/github.com/gflags/gflags/archive/v2.2.1.tar.gz",
-            "https://github.com/gflags/gflags/archive/v2.2.1.tar.gz",
+            "https://mirror.bazel.build/github.com/gflags/gflags/archive/77592648e3f3be87d6c7123eb81cbad75f9aef5a.tar.gz",
+            "https://github.com/gflags/gflags/archive/77592648e3f3be87d6c7123eb81cbad75f9aef5a.tar.gz",
         ],
     )
 
diff --git third_party/aws/BUILD.bazel third_party/aws/BUILD.bazel
index 5426f79..e08f8fc 100644
--- third_party/aws/BUILD.bazel
+++ third_party/aws/BUILD.bazel
@@ -24,7 +24,7 @@ cc_library(
         "@org_tensorflow//tensorflow:raspberry_pi_armeabi": glob([
             "aws-cpp-sdk-core/source/platform/linux-shared/*.cpp",
         ]),
-        "//conditions:default": [],
+        "//conditions:default": glob(["aws-cpp-sdk-core/source/platform/linux-shared/*.cpp",]),
     }) + glob([
         "aws-cpp-sdk-core/include/**/*.h",
         "aws-cpp-sdk-core/source/*.cpp",
diff --git third_party/gpus/crosstool/BUILD.tpl third_party/gpus/crosstool/BUILD.tpl
index db76306..184cd35 100644
--- third_party/gpus/crosstool/BUILD.tpl
+++ third_party/gpus/crosstool/BUILD.tpl
@@ -24,6 +24,7 @@ cc_toolchain_suite(
         "x64_windows|msvc-cl": ":cc-compiler-windows",
         "x64_windows": ":cc-compiler-windows",
         "arm": ":cc-compiler-local",
+        "aarch64": ":cc-compiler-local",
         "k8": ":cc-compiler-local",
         "piii": ":cc-compiler-local",
         "ppc": ":cc-compiler-local",
diff --git third_party/tensorrt/BUILD.tpl third_party/tensorrt/BUILD.tpl
index 57682e8..b1c64f8 100644
--- third_party/tensorrt/BUILD.tpl
+++ third_party/tensorrt/BUILD.tpl
@@ -34,6 +34,38 @@ cc_library(
     visibility = ["//visibility:public"],
 )
 
+cc_library(
+    name = "nv_infer_plugin",
+    srcs = [%{nv_infer_plugin}],
+    data = [%{nv_infer_plugin}],
+    includes = [
+        "include",
+    ],
+    copts= cuda_default_copts(),
+    deps = [
+        "@local_config_cuda//cuda:cuda",
+        ":tensorrt_headers",
+    ],
+    linkstatic = 1,
+    visibility = ["//visibility:public"],
+)
+
+cc_library(
+    name = "nv_parsers",
+    srcs = [%{nv_parsers}],
+    data = [%{nv_parsers}],
+    includes = [
+        "include",
+    ],
+    copts= cuda_default_copts(),
+    deps = [
+        "@local_config_cuda//cuda:cuda",
+        ":tensorrt_headers",
+    ],
+    linkstatic = 1,
+    visibility = ["//visibility:public"],
+)
+
 
 %{tensorrt_genrules}
 
diff --git third_party/tensorrt/tensorrt_configure.bzl third_party/tensorrt/tensorrt_configure.bzl
index 9b94650..61b8f00 100644
--- third_party/tensorrt/tensorrt_configure.bzl
+++ third_party/tensorrt/tensorrt_configure.bzl
@@ -19,8 +19,8 @@ load(
 _TENSORRT_INSTALL_PATH = "TENSORRT_INSTALL_PATH"
 _TF_TENSORRT_VERSION = "TF_TENSORRT_VERSION"
 
-_TF_TENSORRT_LIBS = ["nvinfer"]
-_TF_TENSORRT_HEADERS = ["NvInfer.h", "NvUtils.h"]
+_TF_TENSORRT_LIBS = ["nvinfer", "nvinfer_plugin", "nvparsers"]
+_TF_TENSORRT_HEADERS = ["NvInfer.h", "NvUtils.h", "NvInferPlugin.h", "NvUffParser.h", "NvCaffeParser.h"]
 
 _DEFINE_TENSORRT_SONAME_MAJOR = "#define NV_TENSORRT_SONAME_MAJOR"
 _DEFINE_TENSORRT_SONAME_MINOR = "#define NV_TENSORRT_SONAME_MINOR"
